# Generated by Django 5.0.7 on 2024-07-13 20:18

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleElon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Sarlovha')),
                ('title_uz', models.CharField(max_length=200, null=True, verbose_name='Sarlovha')),
                ('title_en', models.CharField(max_length=200, null=True, verbose_name='Sarlovha')),
                ('title_ru', models.CharField(max_length=200, null=True, verbose_name='Sarlovha')),
                ('body', models.TextField(verbose_name='Tana qismi')),
                ('body_uz', models.TextField(null=True, verbose_name='Tana qismi')),
                ('body_en', models.TextField(null=True, verbose_name='Tana qismi')),
                ('body_ru', models.TextField(null=True, verbose_name='Tana qismi')),
                ('img', models.ImageField(upload_to='Photos/Yangiliklar/')),
                ('img1', models.ImageField(blank=True, upload_to='Photos/Yangiliklar/')),
                ('img2', models.ImageField(blank=True, upload_to='Photos/Yangiliklar/')),
                ('img3', models.ImageField(blank=True, upload_to='Photos/Yangiliklar/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Elon',
                'verbose_name_plural': 'Elonlar',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ArticleNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Sarlovha')),
                ('title_uz', models.CharField(max_length=200, null=True, verbose_name='Sarlovha')),
                ('title_en', models.CharField(max_length=200, null=True, verbose_name='Sarlovha')),
                ('title_ru', models.CharField(max_length=200, null=True, verbose_name='Sarlovha')),
                ('body', models.TextField(verbose_name='Tana qismi')),
                ('body_uz', models.TextField(null=True, verbose_name='Tana qismi')),
                ('body_en', models.TextField(null=True, verbose_name='Tana qismi')),
                ('body_ru', models.TextField(null=True, verbose_name='Tana qismi')),
                ('img', models.ImageField(upload_to='Photos/Yangiliklar/')),
                ('img1', models.ImageField(blank=True, upload_to='Photos/Yangiliklar/')),
                ('img2', models.ImageField(blank=True, upload_to='Photos/Yangiliklar/')),
                ('img3', models.ImageField(blank=True, upload_to='Photos/Yangiliklar/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Maqola',
                'verbose_name_plural': 'Maqolalar',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ArticleQabul2024',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file1', models.FileField(upload_to='qabul/')),
                ('file2', models.FileField(upload_to='qabul/')),
                ('file3', models.FileField(upload_to='qabul/')),
                ('file4', models.FileField(upload_to='qabul/')),
                ('file5', models.FileField(blank=True, null=True, upload_to='qabul/')),
            ],
            options={
                'verbose_name': 'Hujjat',
                'verbose_name_plural': 'Hujjatlar',
            },
        ),
        migrations.CreateModel(
            name='ekranImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('img', models.ImageField(upload_to='Photos/ekran_IMG/')),
            ],
            options={
                'verbose_name': 'Ekran Rasmi',
                'verbose_name_plural': 'Ekran Rasmlari',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
